version: 2.1

orbs:
  ruby: circleci/ruby@1.1.3
  node: circleci/node@4.5.1
  heroku: circleci/heroku@1.2.0


jobs:
  rspec:
    working_directory: ~/web
    docker:
      - image: cimg/ruby:3.3.3-node-18
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: docker23
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            docker-compose up -d
            docker exec web-web-1 curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      - run:
          name: Setup database
          command: |
            docker-compose exec db bash -c "until mysqladmin ping -h db --silent; do echo 'Waiting for db...'; sleep 1; done"
            docker-compose exec web bash -c "bundle exec rails db:create db:migrate db:seed"
      - run:
          name: Upgrade compression-webpack-plugin
          command: |
            docker-compose exec web bash -c "yarn upgrade compression-webpack-plugin"
      - run:
          name: Compile Webpacker
          command: |
            docker-compose exec web bash -c "NODE_OPTIONS=--openssl-legacy-provider RAILS_ENV=test bundle exec rails webpacker:compile --trace"
      - run:
          name: Run rspec
          command: docker-compose exec web bundle exec rspec


  rubocop:
    working_directory: ~/web
    docker:
      - image: cimg/ruby:3.3.3
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-master-{{ checksum "Gemfile.lock" }}
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  heroku_deploy:
    working_directory: ~/web
    docker:
      - image: cimg/ruby:3.3.3
    executor: heroku/default
    resource_class: small
    steps:
      - checkout
      - heroku/install
      - run:
          name: Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main
      - run:
          name: Run post-deploy tasks
          command: |
            heroku run bin/rails db:migrate -a $HEROKU_APP_NAME

workflows:
  version: 2.1
  build:
    jobs:
      - rspec
      - rubocop
      - heroku_deploy:
          requires:
            - rspec
            - rubocop
